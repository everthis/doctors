// General Sprite Defaults
// You can override them before you import this file.
$icon-sprite-base-class: ".icon-sprite" !default;
$icon-sprite-dimensions: false !default;
$icon-spacing: 10px !default;
$icon-position: 0% !default;
$icon-repeat: no-repeat !default;

$icon-sprites: sprite-map("sprites/*.png", $spacing: $icon-spacing, $repeat: $icon-repeat, $position: $icon-position);
$icon-sprites-retina: sprite-map("sprites-retina/*.png", $spacing: $icon-spacing * 2, $repeat: $icon-repeat, $position: $icon-position);

// All sprites should extend this class
// The icon-sprite mixin will do so for you.
#{$icon-sprite-base-class} {
  background: $icon-sprites $icon-repeat;
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3 / 2), (min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
  #{$icon-sprite-base-class} {
    background: $icon-sprites-retina $icon-repeat;
    @include background-size(ceil(image-width(sprite-path($icon-sprites-retina)) / 2) auto);
  }
}

// Extends the sprite base class and set the background position for the desired sprite.
// It will also apply the image dimensions if $dimensions is true.
@mixin icon-sprite($name, $dimensions: $icon-sprite-dimensions, $offset-x: 0, $offset-y: 0) {
  @extend #{$icon-sprite-base-class};
  @include sprite($icon-sprites, $name, $dimensions, $offset-x, $offset-y)
}

@mixin clearfix() {
    &:before, &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin inline-block-fix($element) {
    font-size: 0;
    > #{$element} {
        display: inline-block;
        vertical-align: top;
    }
}

@mixin makeGrid($grid-column-width, $grid-gutter-width, $grid-offset, $grid-name:"grid", $grid-columns:12) {
	.#{$grid-name} {
		box-sizing:content-box;
	    padding-left: $grid-offset;
	    padding-right: $grid-offset;
	    margin-left: 0 - $grid-gutter-width; 
	}

	.#{$grid-name}:before,
	.#{$grid-name}:after{
		content: " ";
  		display: table;
	}

	.#{$grid-name}:after {
	  clear: both;
	} 

	.#{$grid-name} [class^="col-"] {
	    margin-left: $grid-gutter-width;
	    float: left;
	}

	@include makeCommonGrid(1);
}

@mixin makeCommonGrid ($index) {
	@if ($index < $grid-columns + 1) {
		.#{$grid-name} .col-$index {
	        width: $grid-column-width * $index + $grid-gutter-width * $index - $grid-gutter-width;
	    }
		@include makeCommonGrid($index + 1);
	}
}